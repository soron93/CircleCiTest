# First create version
version: 2.1

orbs:
  node: circleci/node@5.0.1

nightly:
  triggers:
    - schedule:
      cron: "* * * * *"
      filters:
        branches:
          only:
            - Main

jobs:
  build:
    docker:
      # - image: circleci/openjdk
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Giving permissions
          command: chmod +x mvnw
      - run:
          name: Setup maven wrapper
          command: mvn -N io.takari:maven:wrapper
      - run:
          name: Load wrapper
          command: ./mvnw -Dmaven.test.skip=true package

  test-1:
    docker:
      # - image: circleci/openjdk
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Giving permissions
          command: chmod +x mvnw
      - run:
          name: Setup maven wrapper
          command: mvn -N io.takari:maven:wrapper
      - run:
          name: Maven Test
          command: ./mvnw test

  test-2:
    docker:
      # - image: circleci/openjdk
      - image: cimg/node:12.16
    steps:
      - checkout
      - run: node --version
      # - node/install-packages:
      #     cache-path: ~/project/node_modules
      #     override-ci-command: npm install
      # - restore_cache:
      #     keys: v1-dependencies-{{ checksum "package.json" }}
      - run: sudo npm install -g npm@latest
      - run:
          name: Install jest
          command: npm install --save-dev jest
      - run: npm run test

  test-3:
    docker:
      # - image: circleci/openjdk
      - image: cimg/node:12.16
    steps:
      - checkout
      - run: node --version
      # - node/install-packages:
      #     cache-path: ~/project/node_modules
      #     override-ci-command: npm install
      # - restore_cache:
      #     keys: v1-dependencies-{{ checksum "package.json" }}
      - run: sudo npm install -g npm@latest
      - run:
          # name: Install unitjs
          # command: npm install --save-dev unit.js
          name: Install appium
          command: npm install --save-dev appium
      - run: npm run test

#   test-3:
#     docker:
#       # - image: circleci/openjdk
#       - image: cimg/node:12.16
#     steps:
#       - checkout
#       - run: node --version
#       # - node/install-packages:
#       #     cache-path: ~/project/node_modules
#       #     override-ci-command: npm install
#       - run: sudo npm install -g npm@latest
#   name: Install unitjs
#   command: npm install unit.js
# run: npm run test


# test by sequentially executing

workflows:
  version: 2.1
  build-test:
    jobs:
      - build
      - test-3:
          requires:
            - build
      - test-2:
          requires:
            - build
      - test-1:
          requires:
            - build
# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/2.0/configuration-reference
# version: 2.1

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# jobs:
#   # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
#   build-and-test:
#     # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
#     # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
#     # Be sure to update the Docker image tag below to openjdk version of your application.
#     # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
#     docker:
#       - image: cimg/openjdk:11.0
#     # Add steps to the job
#     # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#     steps:
#       # Checkout the code as the first step.
#       - checkout
#       # Use mvn clean and package as the standard maven build phase
#       - run:
#           name: Build
#           command: mvn -B -DskipTests clean package
#       # Then run your tests!
#       - run:
#           name: Test
#           command: mvn test

# # Invoke jobs via workflows
# # See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   sample: # This is the name of the workflow, feel free to change it to better match your workflow.
#     # Inside the workflow, you define the jobs you want to run.
#     jobs:
#       - build-and-test
